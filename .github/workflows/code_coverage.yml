name: "Code Coverage"

on:
  push:
    paths-ignore:
    - 'docs/**'
    - '*.md'

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:
    name: "Code Coverage"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: "Get submodules"
      run: git submodule update --init --recursive

    - name: "Generate coverage report"
      run: |
        cd tests
        for i in */*_gen.cpp; do
          category=${i%/*}
          genfile=${i#$category/}
          test=${genfile%_gen.cpp}
          echo "Running the test $test..."
          echo "Compiling $test.cpp..."
          g++ "$category/$test.cpp" -o "$test" -Wall -Wshadow -Wextra -Werror -fprofile-arcs -ftest-coverage -lgcov -std=c++11 -I "../headers/$category"
          echo "Compiling ${test}_gen.cpp..."
          g++ "$category/${test}_gen.cpp" -o "${test}_gen" -std=c++11 -I Tree-Generator
          echo "Compiling ${test}_bf.cpp..."
          g++ "$category/${test}_bf.cpp" -o "${test}_bf" -std=c++11
          echo "Compiling ${test}_check.cpp..."
          g++ "$category/${test}_check.cpp" -o "${test}_check" -std=c++11 -I testlib
          echo "Running ${test}_gen..."
          "./${test}_gen" > "$test.in"
          echo "Running ${test}..."
          "./$test" < "$test.in" > "$test.out"
          echo "Running ${test}_bf..."
          "./${test}_bf" < "$test.in" > "${test}_bf.out"
          echo "Running ${test}_check..."
          "./${test}_check" "$test.in" "$test.out" "${test}_bf.out"
          echo "Generating coverage report..."
          gcov -n -o . "$category/$test.cpp" > /dev/null
          echo "The test $test has passed."
        done

    - name: Upload coverage to Codecov
      run: bash <(curl -s https://codecov.io/bash)
